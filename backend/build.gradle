plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.NBE4_5_SukChanHosu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://djl.ai/maven/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'org.webjars:jquery:3.3.1'
    implementation 'org.webjars:bootstrap:4.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    
    // redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.16.3'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'mysql:mysql-connector-java:8.0.29'
    testImplementation 'com.h2database:h2'
    runtimeOnly 'com.h2database:h2'

    //Spring Doc 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JUnit 5 (기본적인 단위 테스트)
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    // Mockito (Mock 객체를 만들기 위함)
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'
    //actuator
    implementation("org.springframework.boot:spring-boot-starter-actuator:3.4.5")
    // DJL
    implementation 'ai.djl:api:0.24.0'
    implementation 'ai.djl.pytorch:pytorch-engine:0.24.0'
    implementation 'ai.djl.huggingface:tokenizers:0.24.0'

    // PyTorch 엔진
    implementation 'ai.djl.pytorch:pytorch-engine:0.23.0'
//    implementation 'ai.djl.pytorch:pytorch-native-auto:2.0.0'

    // NLP 모델 (Hugging Face)
    implementation 'ai.djl.huggingface:tokenizers:0.23.0'
//    implementation 'ai.djl.huggingface:transformers:0.23.0'

    // 필수 Translator 및 Predictor
//    implementation 'ai.djl.api:djl-basicdataset:0.23.0'
//    implementation 'ai.djl.api:djl-translate:0.23.0'

    tasks.named('test') {
        useJUnitPlatform()
    }
}

test {
    useJUnitPlatform() // JUnit5로 테스트 실행
}